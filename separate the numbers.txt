#include <bits/stdc++.h>
//#include <boost/lexical_cast.hpp>
#include <string>

using namespace std;

// Complete the separateNumbers function below.
void separateNumbers(string s) {
    int o=0; 
    //cout<<s<<endl<<endl;
    for(unsigned long long int i=1;i<=(s.size()/2)+1;i++){
        unsigned long long int j=i;
        
       unsigned long long int no=0;
        for(unsigned long long int m=0;m<i;m++){
            no=no+(s[m]-'0')*pow(10,i-m-1);
            
        
        }

      //  cout<<no<<endl;
        unsigned long long  int no1=no;
        while(j<s.size() && o==0){
             no1=no1+1;
            ostringstream str1;
            str1<<no1;
            string stri=str1.str();
        //    cout<<stri<<endl;
           // cout<<"da"<<stri<<endl<<endl;
            for(unsigned long long int n=0;n<stri.size();n++){
                if(stri[n]==s[j] || j==s.size()-1){
             //       cout<<"hr";
                    if(j==s.size()-1 && stri[n]==s[j]){
                        cout<<"YES"<<" "<<no<<endl;
                        o=1;
                        break;
                    }
                    j++;

                } else {
                  j = s.size() + 1;
                  break;
                }
            }
            
            
            
        }
    }
if(o==0){
cout<<"NO"<<endl;
}
}
int main()
{
    int q;
    cin >> q;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    for (int q_itr = 0; q_itr < q; q_itr++) {
        string s;
        getline(cin, s);

        separateNumbers(s);
    }

    return 0;
}
