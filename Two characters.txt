#include <bits/stdc++.h>

using namespace std;

string ltrim(const string &);
string rtrim(const string &);

// Complete the alternate function below.
int alternate(string s) {
    int large=0;

for(int i=0;i<26;i++){
    for(int j=0;j<26;j++){
        int k=0;
        if(i!=j){
            int m=0;
            int count=0;
            while(m<s.size()){
                if(s[m]=='a'+i){
                    if(count==1 || m==0){
                    count=0;
                    k++;}
                    else{
                        k=0;
                    break;}
                }
                if(s[m]=='a'+j){
                    if(count==0 || m==0){
                        k++;
                        count=1;
                    }
                    else{
                        k=0;
                        break;
                    }
                }
                m++;
            }
            if(large<k && k>1){
                large=k;
            }
        }
    }}
    return large;
}



int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    string l_temp;
    getline(cin, l_temp);

    int l = stoi(ltrim(rtrim(l_temp)));

    string s;
    getline(cin, s);

    int result = alternate(s);

    fout << result << "\n";

    fout.close();

    return 0;
}

string ltrim(const string &str) {
    string s(str);

    s.erase(
        s.begin(),
        find_if(s.begin(), s.end(), not1(ptr_fun<int, int>(isspace)))
    );

    return s;
}

string rtrim(const string &str) {
    string s(str);

    s.erase(
        find_if(s.rbegin(), s.rend(), not1(ptr_fun<int, int>(isspace))).base(),
        s.end()
    );

    return s;
}
