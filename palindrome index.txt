#include <bits/stdc++.h>

using namespace std;

// Complete the palindromeIndex function below.
int palindromeIndex(string s) {
int left=0,right=s.size()-1;
int left1=-1,right1=-1,count1=0;
for(int i=0;i<s.size()/2;i++){
    if(s[left]==s[right]){
        left++;
        right--;
    }
    if(s[left]!=s[right]){
        left1=left;
        right1=right;
        count1=-1;
    }

}
if(count1==0){
return -1;
}
int count=0;
for(int i=left1+1;i<=(left1+right1)/2;i++){
    if(s[i]!=s[right]){
        count=-1;

    }
    right--;
}
if(count==0){
    return left;
}
right=right1;
count=0;
for(int i=left1;i<=((left1+right1)/2)-1;i++){
    if(s[i]!=s[right-1]){
count=-1;
    }
    right--;
}
if(count==0)
return right1;

return count;



}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int q;
    cin >> q;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    for (int q_itr = 0; q_itr < q; q_itr++) {
        string s;
        getline(cin, s);

        int result = palindromeIndex(s);

        fout << result << "\n";
    }

    fout.close();

    return 0;
}
