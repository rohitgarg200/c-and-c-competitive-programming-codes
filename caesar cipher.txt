#include <bits/stdc++.h>

using namespace std;

// Complete the caesarCipher function below.
string caesarCipher(string s, int k) {
    k=k%26;
    for(int i=0;i<s.size();i++){
        if(s[i]>='A'&&s[i]<='Z'){
        if((s[i]+k)<='Z' && (s[i]+k)>='A'){
            s[i]=s[i]+k;
        } else if ((s[i] + k) > 'Z') {
          s[i] = s[i] + k - 26;
        }
        } else if (s[i] >= 'a' && s[i] <= 'z') {
          if ((s[i] + k) >= 'a' && (s[i] + k) <= 'z') {
            s[i]=s[i]+k;
        }
        else if ((s[i]+k)>'z'){
            s[i]=s[i]+k-26;
        }
        }
    }

return s;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    string s;
    getline(cin, s);

    int k;
    cin >> k;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    string result = caesarCipher(s, k);

    fout << result << "\n";

    fout.close();

    return 0;
}
