#include <bits/stdc++.h>

using namespace std;

// Complete the steadyGene function below.
int steadyGene(string gene) {

    vector<int>a(4,0);
    vector<vector<int>>b(gene.length()+1,vector<int>(4,0));
    for(int i=0;i<gene.length();i++){
        if(gene[i]=='A'){
            a[0]++;
            b[i+1][0]=1+b[i][0];
        }
        else if(gene[i]=='C'){
            a[1]++;
            b[i+1][1]=1+b[i][1];
        }else if(gene[i]=='G'){
            a[2]++;
            b[i+1][2]=1+b[i][2];
        }else{
            a[3]++;
            b[i+1][3]=1+b[i][3];
        }

    b[i+1][0]=max(b[i][0],b[i+1][0]);
    b[i+1][1]=max(b[i][1],b[i+1][1]);
    b[i+1][2]=max(b[i][2],b[i+1][2]);
    b[i+1][3]=max(b[i][3],b[i+1][3]);


    }
    int n=gene.length();
    a[0]=a[0]-n/4;
    a[1]=a[1]-n/4;
    a[2]=a[2]-n/4;
    a[3]=a[3]-n/4;
    int val=0;
    for(int i=0;i<4;i++){
        if(a[i]>0){
            val+=a[i];
        }
    }
    if(val==0){
        return 0;
    }
    if(val==n){
        return n-n/4;
    }
int res=n;
int k=0;
for(int i=val;i<=n;i++){
    if(b[i][0]>=a[0] && b[i][1]>=a[1] && b[i][2]>=a[2] && b[i][3]>=a[3] ){
        k=i;
        break;
    }
}
for(int i=val;i<=n;i++){
    for(int j=0;j+i<=n;j++){
        if(b[j+i][0]-b[j][0]>=a[0] && b[j+i][1]-b[j][1]>=a[1] &&
         b[j+i][2]-b[j][2]>=a[2] &&b[j+i][3]-b[j][3]>=a[3]){
            return i;
         }else{
             j+=max({-b[j+i][0]+b[j][0]+a[0],-(b[j+i][1]-b[j][1]-a[1] ),
         -(b[j+i][2]-b[j][2]-a[2]),-(b[j+i][3]-b[j][3]-a[3])})-1;
         }

    }

}
return res;








}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    string gene;
    getline(cin, gene);

    int result = steadyGene(gene);

    fout << result << "\n";

    fout.close();

    return 0;
}
